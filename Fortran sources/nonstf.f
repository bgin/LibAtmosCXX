      SUBROUTINE NONSTF(N,ISTP,DATA0,NM,LAGH,JP0,COEF0,VA0,AIC0,DAIC21,
cx     *                  DAIC,K01,KOUNT2,SXX,TMP,IER)
     *                  DAIC,K01,KOUNT2,SXX)
C
      INCLUDE 'timsac_f.h'
C
cc      PROGRAM NONST
C     PROGRAM 74.4.1. NON-STATIONARY POWER SPECTRUM ANALYSIS
C-----------------------------------------------------------------------
C     ** DESIGNED BY T. OZAKI, THE INSTITUTE OF STATISTICAL MATHEMATICS,
C     ** PROGRAMMED BY T. OZAKI, THE INSTITUTE OF STATISTICAL MATHEMATIC
C         TOKYO
C     ** DATE OF THE LATEST REVISION: MARCH 25, 1977
C     ** THIS PROGRAM WAS ORIGINALLY PUBLISHED IN
C         "TIMSAC-74 A TIME SERIES ANALYSIS AND CONTROL PROGRAM PACKAGE(2
C         BY H. AKAIKE, E. ARAHATA AND T. OZAKI, COMPUTER SCIENCE MONOGRA
C         NO.6 MARCH 1976, THE INSTITUTE OF STATISTICAL MATHEMATICS
C     ** FOR THE BASIC THEORY SEE "ON THE FITTING OF NON-STATIONARY
C         AUTOREGRESSIVE MODELS IN TIME SERIES ANALYSIS" BY T. OZAKI AND
C         IN "PROC. 8TH HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCE
C         WESTERN PERIODICALS NORTH HOLLYWOOD, CALIF., 1975
C-----------------------------------------------------------------------
C     THIS PROGRAM LOCALLY FITS AUTOREGRESSIVE MODELS TO NON-STATIONARY
C     TIME SERIES BY AIC CRITERION.
C     POWER SPECTRA FOR STATIONARY SPANS ARE GRAPHICALLY PRINTED OUT.
C     THE FOLLOWING INPUTS ARE REQUIRED;
C         N: LENGTH OF DATA
C         ISTP : LENGTH OF THE BASIC LOCAL SPAN
C         DFORM : INPUT FORMAT SPECIFICATION IN ONE CARD, FOR EXAMPLE,'(8
C         (X(I),I=1,N) : ORIGINAL DATA.
C
cc      !DEC$ ATTRIBUTES DLLEXPORT :: NONSTF
C
C     NSG : NUMBER OF SEGMENTS OF FREQUENCY AXIS +1
      PARAMETER (NSG=121)
C
cxx      IMPLICIT REAL*8 (A-H,O-Z)
cc      DIMENSION ACV0(101),ACV1(101),ACV2(101),COEF0(50),COEF1(50)
cc      DIMENSION COEF2(50)
cxx      DIMENSION ACV0(LAGH+1),ACV1(LAGH+1),ACV2(LAGH+1)
cxx      DIMENSION COEF0(LAGH,NM),COEF1(LAGH),COEF2(LAGH)
cc      DIMENSION DATA1(9000),SXX(121)
cc      REAL*4 DATA(9000)
cc      REAL*4 DATA1(9000)
cc      REAL*4 DFORM(20)
cc      REAL*4 SXX(121)
cxx      DIMENSION DATA0(N),DATA1(N),SXX(NSG,NM)
cxx      INTEGER IDX(5)
cxx      DIMENSION CN(LAGH+1)
cxx      DIMENSION JP0(NM)
cxx      DIMENSION VA0(NM),AIC0(NM),DAIC21(NM),DAIC(NM)
cxx      DIMENSION K01(NM),KOUNT2(NM)
      INTEGER :: N, ISTP, NM, LAGH, JP0(NM), K01(NM), KOUNT2(NM)
      REAL(8) :: DATA0(N), COEF0(LAGH,NM), VA0(NM), AIC0(NM),
     1           DAIC21(NM), DAIC(NM), SXX(NSG,NM)
      INTEGER :: IDX(5)
      REAL(8) :: ACV0(LAGH+1), ACV1(LAGH+1), ACV2(LAGH+1),
     1           COEF1(LAGH), COEF2(LAGH), DATA1(N), CN(LAGH+1),
     2           AISTP, AIP0, AIP1, AIP2, CST2, CST4, ANI, ANJ, STP,
     3           VA1, VA2, AIC1, AIC2, XMEAN, Z
C
cx      INTEGER*1  TMP(1)
cx      CHARACTER  CNAME*80
C
C     INPUT / OUTPUT DATA FILE OPEN
cc      CALL SETWND
cc      CALL FLOPN2(NFL)
cc      IF (NFL.EQ.0) GO TO 9999
C
cx      IER=0
cx      LU=3
cx      DO 10 I = 1,80
cx   10 CNAME(I:I) = ' '
cx      I = 1
cx      IFG = 1
cx      DO WHILE( (IFG.EQ.1) .AND. (I.LE.80) )
cx         IF ( TMP(I).NE.ICHAR(' ') ) THEN
cx            CNAME(I:I) = CHAR(TMP(I))
cx            I = I+1
cx         ELSE
cx            IFG = 0
cx         END IF
cx      END DO
cx      IF ( I.GT.1 ) THEN
cx         IFG = 1
cx         OPEN (LU,FILE=CNAME,IOSTAT=IVAR)
cx         IF (IVAR .NE. 0) THEN
cxcx            WRITE(*,*) ' ***  nonst temp FILE OPEN ERROR :',CNAME,IVAR
cx            IER=IVAR
cx            IFG=0
cx         END IF
cx      END IF
C
C     INITIALIZATION
cc      LAGH=50
      LAGH1=LAGH+1
      KOUNT0=0
      KOUNT1=0
cc      KOUNT2=0
      DAIC21(1)=0
      DAIC(1)=0
cc      ML=49
C     ML : HIGHEST ALLOWABLE ORDER OF AUTOREGRESSIVE MODEL
      ML1 = LAGH
C     INITIAL  CONDITION  INPUT
cc      READ(5,1) N,ISTP
C     ORIGINAL	DATA  INPUT
cc      READ(5,4) (DFORM(I),I=1,20)
cc      READ(5,DFORM) (DATA(I),I=1,N)
cc      KOUNT2=ISTP
cc      KOUNT1=KOUNT2
      KOUNT2(1)=ISTP
      KOUNT1=KOUNT2(1)
      DO 50 I=1,ISTP
cxx50    DATA1(I)=DATA0(I)
      DATA1(I)=DATA0(I)
50    CONTINUE
C     COMON  SUBROUTINE	 CALL
cc	CALL AUTCOR(DATA1,ACV0,ISTP,LAGH)
C     COMON  SUBROUTINE	 CALL
cc	CALL ICPOUT(ACV0,COEF0,VA0,ML,ISTP,IP0,LAGH)
      CALL AUTCORF(DATA1,ISTP,ACV0,CN,LAGH1,XMEAN)
      CALL SICP(ACV0,COEF0,VA0(1),ML1,ISTP,IP0)
      AISTP=ISTP
      AIP0=IP0
      CST2=2.0D-00
cc	AIC0=AISTP*(DLOG(VA0))+CST2*(AIP0+CST2)
      AIC0(1)=AISTP*(DLOG(VA0(1)))+CST2*(AIP0+CST2)
      NI=ISTP
cc      WRITE(6,8010)
cc      WRITE(6,8001) NI
cc      WRITE(6,8002) IP0
cc      WRITE(6,8003)
      JP0(1)=IP0
cx      IF (IFG.NE.0) WRITE(LU,8001) NI
cx      IF (IFG.NE.0) WRITE(LU,8002) JP0(1)
      IDX(1)=1
      DO 60 I=1,4
      J=I+1
cxx60    IDX(J)=IDX(I)+1
      IDX(J)=IDX(I)+1
60    CONTINUE
70    IK1=IDX(1)
      IK5=IDX(5)
      IK0=IK5-IP0
      IF(IK0.GE.0) GO TO 90
cc      WRITE(6,8004) (IDX(I),I=1,5),(COEF0(I),I=IK1,IK5)
      DO 80 I=1,5
cxx80    IDX(I)=IDX(I)+5
      IDX(I)=IDX(I)+5
80    CONTINUE
      GO TO 70
90    IK0=5-IK0
cc      WRITE(6,8006) (IDX(I),I=1,IK0)
cc      WRITE(6,8005) (COEF0(I),I=IK1,IP0)
cc95    WRITE(6,8007) VA0
cc      WRITE(6,8008) AIC0
cc      K01=KOUNT0+1
      K01(1)=KOUNT0+1
cc      WRITE(6,8009) K01,KOUNT2
cx      IF (IFG.NE.0) WRITE(LU,8009) K01(1),KOUNT2(1)
C     COMON  SUBROUTINE	 CALL
cc      CALL NRASPE(VA0,COEF0,Z,SXX,IP0,0,ISTP,120,KOUNT0,KOUNT2)
cc      CALL SPEGRH(SXX)
      NSG1=NSG-1
      CALL NRASPE(VA0(1),COEF0(1,1),Z,IP0,0,NSG1,SXX)
cx      IF (IFG.NE.0) CALL SPEGRH(LU,SXX,NSG)
      NML=1
100      J=NI+1
      JJ=J+ISTP
cc      KOUNT2=KOUNT2+ISTP
cc      IF(KOUNT2.GT.N) GOTO 999
      IF((KOUNT2(NML)+ISTP).GT.N) GOTO 999
      KOUNT2(NML+1)=KOUNT2(NML)+ISTP
      DO 200 I=1,ISTP
      II=KOUNT1+I
cxx200   DATA1(I)=DATA0(II)
      DATA1(I)=DATA0(II)
200   CONTINUE
      NJ=NI+ISTP
      ANJ=NJ
      ANI=NI
      STP=ISTP
C     COMON  SUBROUTINE	 CALL
cc      CALL AUTCOR(DATA1,ACV2,ISTP,LAGH)
C     COMON  SUBROUTINE	 CALL
cc      CALL ICPOUT(ACV2,COEF2,VA2,ML,ISTP,IP2,LAGH)
      CALL AUTCORF(DATA1,ISTP,ACV2,CN,LAGH1,XMEAN)
      CALL SICP(ACV2,COEF2,VA2,ML1,ISTP,IP2)
      AIP0=IP0
      AIP2=IP2
      CST4=4.0D-00
cc      AIC2=ANI*DLOG(VA0)+STP*DLOG(VA2)+CST2*(AIP0+AIP2+CST4)
      AIC2=ANI*DLOG(VA0(NML))+STP*DLOG(VA2)+CST2*(AIP0+AIP2+CST4)
      DO 500 J=1,NJ
      JJ=KOUNT0+J
cxx500   DATA1(J)=DATA0(JJ)
      DATA1(J)=DATA0(JJ)
500   CONTINUE
cc      CALL AUTCOR(DATA1,ACV1,NJ,LAGH)
cc      CALL ICPOUT(ACV1,COEF1,VA1,ML,NJ,IP1,LAGH)
      CALL AUTCORF(DATA1,NJ,ACV1,CN,LAGH1,XMEAN)
      CALL SICP(ACV1,COEF1,VA1,ML1,NJ,IP1)
      AIP1=IP1
      AIC1=ANJ*DLOG(VA1)+CST2*(AIP1+CST2)
cc      DAIC=AIC2-AIC1
      NML=NML+1
      DAIC(NML)=AIC2-AIC1
      IF(AIC2.LT.AIC1) GOTO 800
      NI=NJ
      IP0=IP1
cc      VA0=VA1
cc      AIC0=AIC1
      VA0(NML)=VA1
      AIC0(NML)=AIC1
      DO 700 I=1,IP0
cc700	COEF0(I)=COEF1(I)
cxx700   COEF0(I,NML)=COEF1(I)
      COEF0(I,NML)=COEF1(I)
700   CONTINUE
      DO 750 I=1,LAGH
cxx750   ACV0(I)=ACV1(I)
      ACV0(I)=ACV1(I)
750   CONTINUE
cc      WRITE(6,8010)
cc      WRITE(6,8001) NI
cc      WRITE(6,8002) IP0
cc      WRITE(6,8003)
      JP0(NML)=IP0
cx      IF (IFG.NE.0) WRITE(LU,8001) NI
cx      IF (IFG.NE.0) WRITE(LU,8001) JP0(NML)
      IDX(1)=1
      DO 760 I=1,4
      J=I+1
cxx760   IDX(J)=IDX(I)+1
      IDX(J)=IDX(I)+1
760   CONTINUE
770   IK1=IDX(1)
      IK5=IDX(5)
      IK0=IK5-IP0
      IF(IK0.GE.0) GO TO 790
cc      WRITE(6,8004) (IDX(I),I=1,5),(COEF0(I),I=IK1,IK5)
      DO 780 I=1,5
cxx780   IDX(I)=IDX(I)+5
      IDX(I)=IDX(I)+5
780   CONTINUE
      GO TO 770
790   IK0=5-IK0
cc      WRITE(6,8006) (IDX(I),I=1,IK0)
cc      WRITE(6,8005) (COEF0(I),I=IK1,IP0)
cc795	WRITE(6,8007) VA0
cc      WRITE(6,8008) AIC0
cc      WRITE(6,8011) DAIC
      DAIC21(NML)=DAIC(NML)
      DAIC(NML)=DAIC(NML)/ANJ
cc      WRITE(6,8013) DAIC
cc      KOUNT1=KOUNT2
cc      K01=KOUNT0+1
      KOUNT1=KOUNT2(NML)
      K01(NML)=KOUNT0+1
cc      WRITE(6,8009) K01,KOUNT2
C     COMON  SUBROUTINE	 CALL
cc      CALL NRASPE(VA0,COEF0,Z,SXX,IP0,0,NI,120,KOUNT0,KOUNT2)
cc      CALL SPEGRH(SXX)
      CALL NRASPE(VA0(NML),COEF0(1,NML),Z,IP0,0,NSG1,SXX(1,NML))
cx      IF (IFG.NE.0) CALL SPEGRH(LU,SXX(1,NML),NSG)
      GOTO 100
800      NI=ISTP
      IP0=IP2
cc      VA0=VA2
cc      AIC0=AIC2
      VA0(NML)=VA2
      AIC0(NML)=AIC2
      DO 1000 I=1,IP0
cc1000        COEF0(I)=COEF2(I)
cxx1000  COEF0(I,NML)=COEF2(I)
      COEF0(I,NML)=COEF2(I)
1000  CONTINUE
      DO 1050 I=1,LAGH
cxx1050  ACV0(I)=ACV2(I)
      ACV0(I)=ACV2(I)
1050  CONTINUE
cc      WRITE(6,8010)
cc      WRITE(6,8000)
cc      WRITE(6,8001) NI
cc      WRITE(6,8002) IP0
cc      WRITE(6,8003)
      JP0(NML)=IP0
cx      IF (IFG.NE.0) WRITE(LU,8001) NI
cx      IF (IFG.NE.0) WRITE(LU,8002) JP0(NML)
      IDX(1)=1
      DO 1060 I=1,4
      J=I+1
cxx1060  IDX(J)=IDX(I)+1
      IDX(J)=IDX(I)+1
1060  CONTINUE
1070  IK1=IDX(1)
      IK5=IDX(5)
      IK0=IK5-IP0
      IF(IK0.GE.0) GO TO 1090
cc      WRITE(6,8004) (IDX(I),I=1,5),(COEF0(I),I=IK1,IK5)
      DO 1080 I=1,5
cxx1080  IDX(I)=IDX(I)+5
      IDX(I)=IDX(I)+5
1080  CONTINUE
      GO TO 1070
1090  IK0=5-IK0
cc      WRITE(6,8006) (IDX(I),I=1,IK0)
cc      WRITE(6,8005) (COEF0(I),I=IK1,IP0)
cc1095      WRITE(6,8007) VA0
cc      WRITE(6,8008) AIC0
cc      WRITE(6,8011) DAIC
      DAIC21(NML)=DAIC(NML)
      DAIC(NML)=DAIC(NML)/ANJ
cc      WRITE(6,8013) DAIC
      KOUNT0=KOUNT1
cc      KOUNT1=KOUNT2
cc      K01=KOUNT0+1
      KOUNT1=KOUNT2(NML)
      K01(NML)=KOUNT0+1
cc      WRITE(6,8009) K01,KOUNT2
C     COMON  SUBROUTINE	 CALL
cc      CALL NRASPE(VA0,COEF0,Z,SXX,IP0,0,NI,120,KOUNT0,KOUNT2)
cc      CALL SPEGRH(SXX)
      CALL NRASPE(VA0(NML),COEF0(1,NML),Z,IP0,0,NSG1,SXX(1,NML))
cx      IF (IFG.NE.0) CALL SPEGRH(LU,SXX(1,NML),NSG)
      GOTO 100
999   CONTINUE
cx      IF (IFG.NE.0) CLOSE(LU)
cc      CALL FLCLS2(NFL)
cc9999      CONTINUE
cxx1     FORMAT(20I5)
cxx4     FORMAT(20A4)
cxx8000  FORMAT(1H ,'SWITCHED TO A NEW MODEL HERE ]')
cxx8001  FORMAT(//1H ,'DATA  LENGTH  FOR  CURRENT  MODEL =',I6)
cxx8002  FORMAT(//,1H ,7X,'ORDER  OF  CURRENT  MODEL =',I6)
cxx8003  FORMAT(//,1H ,'AUTOREGRESSIVE  COEFFICIENTS')
cxx8004  FORMAT(1H ,15X,I3,22X,I3,22X,I3,22X,I3,22X,I3,/,1H ,5D25.10)
cxx8005  FORMAT(1H ,5D25.10)
cxx8006  FORMAT(1H ,15X,I3,22X,I3,22X,I3,22X,I3,22X,I3)
cxx8007  FORMAT(//,1H ,12X,'INNOVATION  VARIANCE =',D18.10)
cxx8008  FORMAT(//,1H ,29X,'AIC =',D18.10)
cxx8009  FORMAT(//,1H ,'THIS  MODEL  IS  FITTED  TO  THE  DATA  FROM',I6,
cxx     C'-TH  POINT  TO',I6,'-TH  POINT')
cxx8010  FORMAT(/////////////////////)
cxx8011  FORMAT(//1H ,21X,'AIC2 - AIC1 =',D18.10)
cxx8013  FORMAT(//,1H ,26X,'DAIC/N=',D18.10)
      RETURN
      END
C
C
      SUBROUTINE SICP(CXX,COEF,OSD,L1,N,MO)
C     THIS SUBROUTINE FITS AUTOREGRESSIVE MODELS
C     X(N)=A(1)X(N-1)+...+A(M)X(N-M)+E(N)
C     OF SUCCESSIVELY INCREASING ORDER UP TO L(=L1-1).
C     INPUT:
C     CXX(I),I=0,L1; AUTOCOVARIANCE SEQUENCE
C     L1; L1=L+1, L IS THE UPPER LIMIT OF THE MODEL ORDER
C     N; LENGTH OF ORIGINAL DATA
C     OUT PUT:
C     MO; ORDER OF AR
C     OSD; INNOVATION VARIANCE
C     COEF; AR-COEFFICIENTS
cxx      IMPLICIT REAL*8(A-H,O-Z)
cxx      DIMENSION CXX(L1),COEF(L1)
cc	DIMENSION A(500),B(500)
      INTEGER :: L1, N, MO
      REAL(8) :: CXX(L1), COEF(L1), OSD
      REAL(8) :: A(L1-1),B(L1-1), CST1, CST2, SD, AN, OAIC, SE, D, D2,
     1           AM, DLSD, AIC
      CST1=1.0D-00
      CST2=2.0D-00
      L=L1-1
      SD=CXX(1)
      AN=N
      OAIC=AN*DLOG(SD)
      OSD=SD
      MO=0
      SE=CXX(2)
C     ITERATION START
      DO 400 M=1,L
      MP1=M+1
      D=SE/SD
      A(M)=D
      D2=D*D
      SD=(CST1-D2)*SD
      AM=M
      AIC=AN*DLOG(SD)+CST2*AM
      DLSD=DLOG(SD)
      IF(M.EQ.1) GO TO 410
C
C     A(I) COMPUTATION
      LM=M-1
      DO 420 I=1,LM
cxx  420 A(I)=A(I)-D*B(I)
      A(I)=A(I)-D*B(I)
  420 CONTINUE
  410 DO 421 I=1,M
      IM=MP1-I
cxx  421 B(I)=A(IM)
      B(I)=A(IM)
  421 CONTINUE
C
C     M,SD,FICP PRINT OUT
C     WRITE(6,860) M
C     WRITE(6,861) SD,FICP
C     WRITE(6,960)
C     DO 961 I=1,M
C 961 WRITE(6,662) I,A(I)
C
      IF(OAIC.LT.AIC) GO TO 440
      OAIC=AIC
      OSD=SD
      MO=M
      DO 430 I=1,M
cxx  430 COEF(I)=A(I)
      COEF(I)=A(I)
  430 CONTINUE
  440 IF(M.EQ.L) GO TO 400
      SE=CXX(M+2)
      DO 441 I=1,M
cxx  441 SE=SE-B(I)*CXX(I+1)
      SE=SE-B(I)*CXX(I+1)
  441 CONTINUE
  400 CONTINUE
cxx  699 RETURN
      RETURN
cxx    1 FORMAT(16I5)
cxx    2 FORMAT(4D20.10)
cxx  658 FORMAT(1H ,'INITIAL CONDITION')
cxx  659 FORMAT(1H ,2HN=,I5,5X,2HL=,I5)
cxx  660 FORMAT(1H ,'AUTO COVARIANCE')
cxx  661 FORMAT(1H ,4X,1HI,11X,6HCXX(I))
cxx  662 FORMAT(1H ,I5,D17.5)
cxx  757 FORMAT(1H ,2HM=,4X,1H )
cxx  758 FORMAT(1H ,'I.C.(P)=',D17.5)
cxx  860 FORMAT(1H ,2HM=,I5)
cxx  861 FORMAT(1H ,3HSD=,D17.5,5X,8HI.C.(P)=,D17.5)
cxx  960 FORMAT(1H ,4X,1HI,13X,4HA(I))
cxx870   FORMAT(1H ,'MINIMUM I.C.(P)=',D12.5,2X,'ATTAINED AT M=',I5)
cxx 1100 FORMAT(/1H ,'I.C.(P)=N*DLOG(SD)+2*M')
      END
